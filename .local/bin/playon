#!/usr/bin/env sh
# shellcheck disable=SC2086,SC2089,SC2090

PYTHON_VERSION=3
INVENTORY_SET=0
ARGS=""
EXTRA_ARGS=""
TEMP_PLAYBOOK=$(mktemp -p "$(pwd)" playon.book.XXXXXX)
TEMP_INVENTORY=$(mktemp -p "$(pwd)" playon.inv.XXXXXX)

trap 'rm "$TEMP_PLAYBOOK"; rm "$TEMP_INVENTORY"' EXIT

if [ "$1" = "localhost" ]; then
    echo "---
- hosts: localhost
  tasks:" > "$TEMP_PLAYBOOK"
    echo "127.0.0.1 ansible_connection=local" >> $TEMP_INVENTORY
    shift
else
    echo "---
- hosts: all
  tasks:" > "$TEMP_PLAYBOOK"
fi

while [ $# -gt 0 ]; do
    case $1 in
        -2 )
            PYTHON_VERSION=2
            ;;
        -* )
            case $1 in
                --inventory | -i | --inventory-file )
                    EXTRA_ARGS="$EXTRA_ARGS $1 $2"
                    shift
                    INVENTORY_SET=1
                    ;;
                --skip-tags | --start-at-task | --vault-id | --vault-password-file | -M | --module-path | \
                -e | --extra-vars | -f | --forks | -l | --limit | -t | --tags | \
                --private-key | --key-file | --scp-extra-args | --sftp-extra-args | --ssh-common-args | --ssh-extra-args | \
                -T | --timeout | -c | --connection | -u | --user | \
                --become-method | --become-user )
                    EXTRA_ARGS="$EXTRA_ARGS $1 $2"
                    shift
                    ;;
                -K | --ask-pass | -k | --ask-become-pass | -b | --become )
                    EXTRA_ARGS="$EXTRA_ARGS $1"
                    ;;
                * )
                    EXTRA_ARGS="$EXTRA_ARGS $1"
                    ;;
            esac
            ;;
        *.yaml | *.yml )
            echo "  - name: $1" >> "$TEMP_PLAYBOOK"
            echo "    import_tasks: $1" >> "$TEMP_PLAYBOOK"
            ;;
        localhost )
            echo "localhost have to be the first param, and have to be the only inventory."
            exit 1
            ;;
        * )
            if [ -d "$1" ]; then
                {
                    echo "  - include_role:";
                    echo "      name: $1";
                    echo "    tags:";
                    echo "      - always";
                } >> "$TEMP_PLAYBOOK"
            elif [ -f "$1" ]; then
                INVENTORY_SET=1
                ARGS="$ARGS -i $1"
            elif [ $INVENTORY_SET -eq 1 ]; then
                if (shift;
                    for i in "$@"; do
                        case $i in
                            -*) ;;
                            *) exit 1;;
                        esac
                    done;
                    exit 0;
                    ); then
                    # If inventory already present, consider last arg as cmdline
                    {
                        echo "  - name: Run command";
                        echo "    command: sh -c '$1'";
                    } >> "$TEMP_PLAYBOOK"
                else
                    INVENTORY_SET=1
                    echo "$1" >> $TEMP_INVENTORY
                fi
            else
                INVENTORY_SET=1
                echo "$1" >> $TEMP_INVENTORY
            fi
    esac
    shift
done

if [ -n "$ARG_INVENTORY" ]; then
    ARGS="$ARGS -i $ARG_INVENTORY"
fi

echo "Temporary built playbook: "
cat "$TEMP_PLAYBOOK"

echo "Temporary inventory: "
cat $TEMP_INVENTORY

echo ansible-playbook -i $TEMP_INVENTORY $ARGS --extra-vars "ansible_python_interpreter=/usr/bin/python$PYTHON_VERSION" $EXTRA_ARGS "$TEMP_PLAYBOOK"
ansible-playbook -i $TEMP_INVENTORY $ARGS --extra-vars "ansible_python_interpreter=/usr/bin/python$PYTHON_VERSION" $EXTRA_ARGS "$TEMP_PLAYBOOK"
